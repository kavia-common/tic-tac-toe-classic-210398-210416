{"is_source_file": true, "format": "TypeScript", "description": "This file defines a Vue composable function for managing the state and logic of a Tic-Tac-Toe game, including move handling, winner detection, scorekeeping, AI moves, and audit logging.", "external_files": ["@ /types/game", "./useAI"], "external_methods": ["bestMove"], "published": ["useTicTacToe"], "classes": [], "methods": [{"name": "export function useTicTacToe(audit: AuditApi) { useTicTacToe", "description": "Exports a reactive game state and control functions for the Tic-Tac-Toe game, including move execution, game resets, opponent toggling, and scoring.", "scope": "", "scopeKind": ""}, {"name": "checkWinner", "description": "Determines if the current board has a winner or a draw based on pre-defined winning line combinations."}, {"name": "finalizeGame", "description": "Marks the game as over, records the winner or draw, updates scores, and sets the winning line if applicable."}, {"name": "newGame", "description": "Resets the board for a new game while keeping the scores."}, {"name": "resetScores", "description": "Resets the game scores to zero."}, {"name": "toggleOpponent", "description": "Switches between human and AI opponent modes and triggers AI move if switching to AI and it's AI's turn."}, {"name": "makeMove", "description": "Attempts to place the current player's mark at the specified index, updates game state, and triggers AI move if appropriate."}, {"name": "maybeAIMove", "description": "Initiates an AI move if the opponent mode is AI, the game is ongoing, and it's AI's turn."}], "calls": ["checkWinner", "finalizeGame", "audit.log", "audit.snapshot", "bestMove", "makeMove", "watch"], "search-terms": ["useTicTacToe", "game state management", "AI move", "winner detection", "score management", "vue composable"], "state": 2, "file_id": 12, "knowledge_revision": 43, "git_revision": "406b222fb4745b1534d094511192b67de8774598", "revision_history": [{"26": ""}, {"43": "406b222fb4745b1534d094511192b67de8774598"}], "ctags": [{"_type": "tag", "name": "AuditApi", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-210398-210416/tictactoe_frontend/composables/useTicTacToe.ts", "pattern": "/^interface AuditApi {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "WIN_LINES", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-210398-210416/tictactoe_frontend/composables/useTicTacToe.ts", "pattern": "/^const WIN_LINES: number[][] = [$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "a", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-210398-210416/tictactoe_frontend/composables/useTicTacToe.ts", "pattern": "/^      const [a,bIdx,c] = line$/", "language": "TypeScript", "kind": "constant", "scope": "useTicTacToe", "scopeKind": "function"}, {"_type": "tag", "name": "aiIdx", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-210398-210416/tictactoe_frontend/composables/useTicTacToe.ts", "pattern": "/^    const aiIdx = bestMove(board.value, 'O', 9)$/", "language": "TypeScript", "kind": "constant", "scope": "useTicTacToe", "scopeKind": "function"}, {"_type": "tag", "name": "bIdx", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-210398-210416/tictactoe_frontend/composables/useTicTacToe.ts", "pattern": "/^      const [a,bIdx,c] = line$/", "language": "TypeScript", "kind": "constant", "scope": "useTicTacToe", "scopeKind": "function"}, {"_type": "tag", "name": "before", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-210398-210416/tictactoe_frontend/composables/useTicTacToe.ts", "pattern": "/^      const before = audit.snapshot(state.value)$/", "language": "TypeScript", "kind": "constant", "scope": "useTicTacToe", "scopeKind": "function"}, {"_type": "tag", "name": "before", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-210398-210416/tictactoe_frontend/composables/useTicTacToe.ts", "pattern": "/^    const before = audit.snapshot(state.value)$/", "language": "TypeScript", "kind": "constant", "scope": "useTicTacToe", "scopeKind": "function"}, {"_type": "tag", "name": "board", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-210398-210416/tictactoe_frontend/composables/useTicTacToe.ts", "pattern": "/^  const board = ref<Board>(Array(9).fill(null))$/", "language": "TypeScript", "kind": "constant", "scope": "useTicTacToe", "scopeKind": "function"}, {"_type": "tag", "name": "c", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-210398-210416/tictactoe_frontend/composables/useTicTacToe.ts", "pattern": "/^      const [a,bIdx,c] = line$/", "language": "TypeScript", "kind": "constant", "scope": "useTicTacToe", "scopeKind": "function"}, {"_type": "tag", "name": "currentPlayer", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-210398-210416/tictactoe_frontend/composables/useTicTacToe.ts", "pattern": "/^  const currentPlayer = ref<Player>('X')$/", "language": "TypeScript", "kind": "constant", "scope": "useTicTacToe", "scopeKind": "function"}, {"_type": "tag", "name": "gameOver", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-210398-210416/tictactoe_frontend/composables/useTicTacToe.ts", "pattern": "/^  const gameOver = ref(false)$/", "language": "TypeScript", "kind": "constant", "scope": "useTicTacToe", "scopeKind": "function"}, {"_type": "tag", "name": "interface", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-210398-210416/tictactoe_frontend/composables/useTicTacToe.ts", "pattern": "/^interface AuditApi {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "line", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-210398-210416/tictactoe_frontend/composables/useTicTacToe.ts", "pattern": "/^    for (const line of WIN_LINES) {$/", "language": "TypeScript", "kind": "constant", "scope": "useTicTacToe", "scopeKind": "function"}, {"_type": "tag", "name": "log", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-210398-210416/tictactoe_frontend/composables/useTicTacToe.ts", "pattern": "/^  log: (entry: any) => void$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "opponentMode", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-210398-210416/tictactoe_frontend/composables/useTicTacToe.ts", "pattern": "/^  const opponentMode = ref<'human'|'ai'>('human')$/", "language": "TypeScript", "kind": "constant", "scope": "useTicTacToe", "scopeKind": "function"}, {"_type": "tag", "name": "result", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-210398-210416/tictactoe_frontend/composables/useTicTacToe.ts", "pattern": "/^      const result = checkWinner(board.value)$/", "language": "TypeScript", "kind": "constant", "scope": "useTicTacToe", "scopeKind": "function"}, {"_type": "tag", "name": "scores", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-210398-210416/tictactoe_frontend/composables/useTicTacToe.ts", "pattern": "/^  const scores = ref<Scores>({ X: 0, O: 0, draws: 0 })$/", "language": "TypeScript", "kind": "constant", "scope": "useTicTacToe", "scopeKind": "function"}, {"_type": "tag", "name": "state", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-210398-210416/tictactoe_frontend/composables/useTicTacToe.ts", "pattern": "/^  const state = computed<GameState>(() => ({$/", "language": "TypeScript", "kind": "constant", "scope": "useTicTacToe", "scopeKind": "function"}, {"_type": "tag", "name": "useTicTacToe", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-210398-210416/tictactoe_frontend/composables/useTicTacToe.ts", "pattern": "/^export function useTicTacToe(audit: AuditApi) {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "winner", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-210398-210416/tictactoe_frontend/composables/useTicTacToe.ts", "pattern": "/^  const winner = ref<Player | 'draw' | null>(null)$/", "language": "TypeScript", "kind": "constant", "scope": "useTicTacToe", "scopeKind": "function"}, {"_type": "tag", "name": "winningLine", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-210398-210416/tictactoe_frontend/composables/useTicTacToe.ts", "pattern": "/^  const winningLine = ref<number[] | null>(null)$/", "language": "TypeScript", "kind": "constant", "scope": "useTicTacToe", "scopeKind": "function"}], "hash": "51fe2872a782c96ccad316773eb5d027", "format-version": 4, "code-base-name": "tictactoe_frontend", "filename": "tictactoe_frontend/composables/useTicTacToe.ts"}