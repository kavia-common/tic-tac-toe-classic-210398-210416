{"is_source_file": true, "format": "TypeScript", "description": "This file provides utility functions for serializing Vue.js reactive objects, refs, and other complex data structures into JSON-serializable plain objects. It includes functions to detect object-like structures, unwrap Vue reactive proxies and refs, handle circular references, and safely stringify objects for UI display.", "external_files": ["vue"], "external_methods": ["isRef", "toRaw"], "published": ["toPlainSafe", "safeStringify"], "classes": [], "methods": [{"name": "function isObjectLike(val: unknown): val is Record<string, unknown> | unknown[] { isObjectLike", "description": "Detects if a value is a non-null object or array, used internally for traversal and type checks.", "scope": "", "scopeKind": ""}, {"name": "export function toPlainSafe<T>(input: T, seen = new WeakSet<object>()): T { toPlainSafe", "description": "Converts Vue reactive proxies and refs into plain, JSON-serializable data structures, guarding against circular references.", "scope": "", "scopeKind": ""}, {"name": "export function safeStringify(input: unknown, space?: number): string { safeStringify", "description": "Safely serializes objects into JSON strings by first converting reactive structures to plain objects and handling cyclic references.", "scope": "", "scopeKind": ""}], "calls": ["isRef", "toRaw", "Array.isArray", "Object.entries", "JSON.stringify"], "search-terms": ["Vue", "serialization", "reactive", "ref", "toPlainSafe", "safeStringify", "circular references", "JSON serialization"], "state": 2, "file_id": 17, "knowledge_revision": 39, "git_revision": "", "ctags": [{"_type": "tag", "name": "asObj", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-210398-210416/tictactoe_frontend/utils/serialization.ts", "pattern": "/^   const asObj = raw as unknown as object$/", "language": "TypeScript", "kind": "constant", "scope": "toPlainSafe", "scopeKind": "function"}, {"_type": "tag", "name": "isObjectLike", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-210398-210416/tictactoe_frontend/utils/serialization.ts", "pattern": "/^ function isObjectLike(val: unknown): val is Record<string, unknown> | unknown[] {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "k", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-210398-210416/tictactoe_frontend/utils/serialization.ts", "pattern": "/^   for (const [k, v] of Object.entries(raw as Record<string, unknown>)) {$/", "language": "TypeScript", "kind": "constant", "scope": "toPlainSafe", "scopeKind": "function"}, {"_type": "tag", "name": "out", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-210398-210416/tictactoe_frontend/utils/serialization.ts", "pattern": "/^   const out: Record<string, unknown> = {}$/", "language": "TypeScript", "kind": "constant", "scope": "toPlainSafe", "scopeKind": "function"}, {"_type": "tag", "name": "plain", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-210398-210416/tictactoe_frontend/utils/serialization.ts", "pattern": "/^     const plain = toPlainSafe(input)$/", "language": "TypeScript", "kind": "constant", "scope": "safeStringify", "scopeKind": "function"}, {"_type": "tag", "name": "raw", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-210398-210416/tictactoe_frontend/utils/serialization.ts", "pattern": "/^   const raw = isObjectLike(input) ? (toRaw(input as object) as unknown as T) : input$/", "language": "TypeScript", "kind": "constant", "scope": "toPlainSafe", "scopeKind": "function"}, {"_type": "tag", "name": "safeStringify", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-210398-210416/tictactoe_frontend/utils/serialization.ts", "pattern": "/^ export function safeStringify(input: unknown, space?: number): string {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "seen", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-210398-210416/tictactoe_frontend/utils/serialization.ts", "pattern": "/^     const seen = new WeakSet()$/", "language": "TypeScript", "kind": "constant", "scope": "safeStringify", "scopeKind": "function"}, {"_type": "tag", "name": "toPlainSafe", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-210398-210416/tictactoe_frontend/utils/serialization.ts", "pattern": "/^ export function toPlainSafe<T>(input: T, seen = new WeakSet<object>()): T {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "v", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-classic-210398-210416/tictactoe_frontend/utils/serialization.ts", "pattern": "/^   for (const [k, v] of Object.entries(raw as Record<string, unknown>)) {$/", "language": "TypeScript", "kind": "constant", "scope": "toPlainSafe", "scopeKind": "function"}], "hash": "7fab91e2cc0a5bc9bc5f0cf41a919347", "format-version": 4, "code-base-name": "tictactoe_frontend", "filename": "tictactoe_frontend/utils/serialization.ts", "revision_history": [{"39": ""}]}